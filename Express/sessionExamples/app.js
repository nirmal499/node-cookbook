const express = require("express");
const mysql = require('mysql');
const session = require("express-session");
var MySQLStore = require('express-mysql-session')(session);

const app = express();
const conn = mysql.createConnection({
    host: 'localhost',
    user: 'nodejsuser',
    password: '(24fG$#[f$BqZdT=',
    database: 'nodejsuserdb'
});

conn.connect(function (err) {
    if (err) {
        console.log(err);
        return;
    }
    console.log("Connected!");
});

app.use(express.json());
app.use(express.urlencoded({ extended: true }));

const sessionStore = new MySQLStore({}/* session store options */, conn);
/* The sessions database table should be automatically created, when using default options.*/
app.use(session({
    /* Here secret says that if provided secret is invalid then the session is invalid too */
    secret: 'some secret',
    resave: false,
    saveUninitialized: true,
    /* store specifies what persistance memory are we going use inorder to store our generated sessions */
    /* A session is used to store information about a particular user through out the browser */
    store: sessionStore,
    cookie: {
        maxAge: 24 * 60 * 60 * 1000 // expires after one day
    }
}));

app.get('/', (req, res, next) => {
    /* We can see what the session information is present in the Request header */
    console.log(req.session);

    /* We can also make our OWN PROPERTY in req.session */
    if (req.session.viewCount) {
        req.session.viewCount += 1;
    } else {
        /* In FIRST request we are not going to have viewCount property set */
        req.session.viewCount = 1;
    }
    /* In our database a new attribute will be created named viewCount*/
    res.send(`
        <h1>Hello World (Sessions) </h1>
        <br/>
        <h2>You have visited this page ${req.session.viewCount} times</h2>
    `);
});

app.listen(3000);

/* When we first run app.js then automatically the sessions TABLE will be created in
    the database provided in the mysql. But there will be no entries yet.

    In order to establish a new session we have to do some sort of HTTP request to our application

    When we open [We are making HTTP request to our application] localhost:3000
    FIRST TIME [There will be no cookie[key-value pair] name 'connect.sid'[Default key name given by express-session middleware] will present in our browser.
    [It means in the Request Header , in the Cookie header there will no key named as 'connect.sid']].
    then our express application will check the Request Header, Cookie header and look for key named as 'connect.sid'. IF not found
    then express-session will be fired and a new session will be initialized in the server side and in response rom the server the browser[client]
    will get a set-cookie header in the Response header which will be containing key as 'connect.sid' and value is the session_id generated by the
    express-session in server side.
    So, in the browser a cookie is saved having key name as 'connect.sid' and it's value will be the session_id.
    After that if we again refresh the browser[It means we are again making a request to our express application].
    Now it sees the Request Header, Cookie header will be containing the key name 'connect.sid' and its value.
    So, now our express application will examine Request Header ,Cookie header and it will find the session_id and
    then checks if that session is present in our database[created by the express-session]. If YES then it means that it is a
    valid session or ELSE it is not a valid session.

    Our database will now be containing a new entry[which is session_id initialized by the express-session] in the table 'sessions'
    +----------------------------------+------------+--------------------------------------------------------------------------------------------------------+
    | session_id                       | expires    | data                                                                                                   |
    +----------------------------------+------------+--------------------------------------------------------------------------------------------------------+
    | K41aPErSULpN_8_aF3QjQ6Nyt87UEfsP | 1638952123 | {"cookie":{"originalMaxAge":86400000,"expires":"2021-12-08T08:27:22.993Z","httpOnly":true,"path":"/"}} |


*/


/* During making any request, our browser look for any cookie stored in the Storage section. If the
    cookies section contains a valid cookie[Unexpired cookie] then the browser attachs that cookie in the Request Header, set-cookie header
    whenever we are making any request to any server
*/